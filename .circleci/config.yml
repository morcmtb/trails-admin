version: 2
jobs:
  develop:
    docker:
      - image: circleci/python:3-node

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependenciess
          command: yarn install --frozen-lockfile

      - run:
          name: Create aws_config.js
          command: |
            echo "export default {
                  cognito: {
                    USER_POOL_ID: '${AWS_USER_POOL_ID}',
                    APP_CLIENT_ID: '${AWS_APP_CLIENT_ID}',
                    REGION: '${AWS_REGION}',
                    IDENTITY_POOL_ID: '${AWS_IDENTITY_POOL_ID}'
                  },
                  apiGateway: {
                    URL: '${AWS_API_GATEWAY}',
                    REGION: '${AWS_REGION}'
                  }}" >> ~/repo/src/aws_config.js

      - run:
          name: Install AWS
          command: sudo pip install awscli

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Build
          command: yarn build

      - run:
          name: Deploy to S3
          command: aws s3 sync ~/repo/build s3://dev-roam-admin  --delete

      - run:
          name: CloudFront
          command: aws cloudfront create-invalidation --distribution-id $AWS_CF_DISTRIBUTION_ID --paths "/*"

workflows:
  version: 2
  build-deploy:
    jobs:
      - develop:
          filters:
            branches:
              only: develop
